---
MXNET_VERSION: "mxnet"
output_path: "./output/detnet/coco"
symbol: detnet
gpus: '0'
CLASS_AGNOSTIC: false
SCALES:
- 800
- 1333
TEST_SCALES: [[800, 1280]] # single scale testing
#TEST_SCALES: [[480, 800], [576, 900], [688, 1100], [800, 1200], [1200, 1600], [1400, 2000]] # multi-scale testing
default:
  frequent: 1
  kvstore: device
network:
  pretrained: "./model/pretrained_model/detnet59"
  pretrained_epoch: 0
  PIXEL_MEANS:
  - 0.406
  - 0.456
  - 0.485
  PIXEL_STDS:
  - 0.225
  - 0.224
  - 0.229
  IMAGE_STRIDE: 16
  RCNN_FEAT_STRIDE: 16
  RPN_FEAT_STRIDE:
  - 4
  - 8
  - 16
  - 16
  - 16
  ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  ANCHOR_SCALES:
  - 8
  - 8
  - 8
  - 16
  - 32
  FIXED_PARAMS:
  - conv1
  - bn_conv1
  - res2
  - bn2
  - gamma
  - beta
  NUM_ANCHORS: 3
dataset:
  NUM_CLASSES: 81
  dataset: coco
  dataset_path: "./data/coco"
  image_set: train2017
  # image_set: minival2014
  root_path: "./data"
  test_image_set: val2017 #minival2014
  proposal: detnet
TRAIN:
  lr: 0.0005
  warmup_lr: 0.0005
  warmup_step: 500
  warmup: true
  lr_step: '5,7,9'
  wd: 0.0001
  begin_epoch: 0
  end_epoch: 11
  model_prefix: 'detnet_coco'
  # whether resume training
  RESUME: false
  # whether flip image
  FLIP: true
  # whether shuffle image
  SHUFFLE: true
  # whether use OHEM
  ENABLE_OHEM: false
  # size of images for each device, 2 for rcnn, 1 for rpn and e2e
  BATCH_IMAGES: 1
  # e2e changes behavior of anchor loader and metric
  END2END: true
  # group images with similar aspect ratio
  ASPECT_GROUPING: true
  # R-CNN
  # rcnn rois batch size
  BATCH_ROIS: 128
  BATCH_ROIS_OHEM: 512
  # rcnn rois sampling params
  FG_FRACTION: 0.25
  FG_THRESH: 0.5
  BG_THRESH_HI: 0.5
  BG_THRESH_LO: 0.0
  # rcnn bounding box regression params
  BBOX_REGRESSION_THRESH: 0.5
  BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  # RPN anchor loader
  # rpn anchors batch size
  RPN_BATCH_SIZE: 256
  # rpn anchors sampling params
  RPN_FG_FRACTION: 0.5
  RPN_POSITIVE_OVERLAP: 0.7
  RPN_NEGATIVE_OVERLAP: 0.3
  RPN_CLOBBER_POSITIVES: false
  # rpn bounding box regression params
  RPN_BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  RPN_POSITIVE_WEIGHT: -1.0
  # used for end2end training
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 12000
  RPN_POST_NMS_TOP_N: 2000
  RPN_MIN_SIZE: 0
  # approximate bounding box regression
  BBOX_NORMALIZATION_PRECOMPUTED: true
  BBOX_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  BBOX_STDS:
  - 0.1
  - 0.1
  - 0.2
  - 0.2
TEST:
  # use rpn to generate proposal
  HAS_RPN: true
  # size of images for each device
  BATCH_IMAGES: 1
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 12000
  RPN_POST_NMS_TOP_N: 2000
  RPN_MIN_SIZE: 0
  # RPN generate proposal
  PROPOSAL_NMS_THRESH: 0.7
  PROPOSAL_PRE_NMS_TOP_N: 12000
  PROPOSAL_POST_NMS_TOP_N: 2000
  PROPOSAL_MIN_SIZE: 0
  # RCNN nms
  NMS: 0.3
  test_epoch: 4
  max_per_image: 100
